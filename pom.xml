<?xml version="1.0" encoding="UTF-8"?>
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <!-- POM file generated with GWT webAppCreator -->
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.cherrot</groupId>
  <artifactId>gwt-gae-bestpractice</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>GWT RateChecker</name>

  <!-- Specify hard-coded project properties here -->
    <properties>
        <!-- GWT version -->
        <gwt.version>2.4.0</gwt.version>
        <!-- GWT needs at least java 1.5 -->
        <maven.compiler.source>1.6</maven.compiler.source>
        <maven.compiler.target>1.6</maven.compiler.target>
        <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
        <gae.home>/home/cherrot/sdk/appengine-java-sdk</gae.home>
        <!-- Specify AppEngine version for your project. It should match SDK version pointed to
by ${gae.home} property (Typically, one used by your Eclipse plug-in) -->
        <gae.version>1.6.4.1</gae.version>
        <gaePlugin.version>1.6.4</gaePlugin.version>
        <!-- Upload to http://test.latest.<applicationName>.appspot.com by default -->
        <gae.application.version>test</gae.application.version>
        <!-- port defaults to 8080 -->
        <gae.port>8080</gae.port>
        <!-- Produce detailed JS during GWT compilation for development environment -->
        <gwt.style>DETAILED</gwt.style>
    </properties>

    <repositories>
        <repository>
            <id>DataNucleus_Repos2</id>
            <name>DataNucleus Repository</name>
            <url>http://www.datanucleus.org/downloads/maven2</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>maven-gae-plugin-repo</id>
            <name>Maven Google App Engine Repository</name>
            <url>http://maven-gae-plugin.googlecode.com/svn/repository/</url>
        </pluginRepository>
        <pluginRepository>
            <id>DataNucleus_2</id>
            <url>http://www.datanucleus.org/downloads/maven2/</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <!-- GWT dependencies -->
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-servlet</artifactId>
            <version>${gwt.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>${gwt.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--GAE dependencies-->
        <dependency>
            <groupId>javax.jdo</groupId>
            <artifactId>jdo2-api</artifactId>
            <version>2.3-eb</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.transaction</groupId>
                    <artifactId>transaction-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
<!--        <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-jpa</artifactId>
            <version>1.1.5</version>
        </dependency>-->

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-1.0-sdk</artifactId>
            <version>${gae.version}</version>
        </dependency>

<!--        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>1.0.2</version>
        </dependency>-->

        <dependency>
            <groupId>com.google.appengine.orm</groupId>
            <artifactId>datanucleus-appengine</artifactId>
            <version>1.0.10</version>
        </dependency>

        <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-core</artifactId>
            <version>1.1.6</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.transaction</groupId>
                    <artifactId>transaction-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>jta</artifactId>
            <version>1.1</version>
        </dependency>

        <!-- J2EE Servlet API. We need it to compile IndexServlet class. You can probably remove
 it, if you don't explicitly use Servlets -->
<!--        <dependency>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-servlet_2.5_spec</artifactId>
            <version>1.2</version>
            <scope>provided</scope>
        </dependency>-->

        <!-- Make use of JSP tags. Remove, if you don't use JSPs -->
<!--        <dependency>
            <artifactId>standard</artifactId>
            <groupId>taglibs</groupId>
            <version>1.1.2</version>
            <type>jar</type>
            <scope>runtime</scope>
        </dependency>-->

        <!-- Test scope -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>

        <!-- GAE libraries for local testing as described here: http://code.google.com/appengine/docs/java/howto/unittesting.html -->
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-labs</artifactId>
            <version>${gae.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-stubs</artifactId>
            <version>${gae.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-testing</artifactId>
            <version>${gae.version}</version>
            <scope>test</scope>
        </dependency>

        <!--GWT server side dependencies using Google-Guice-->
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>3.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-servlet</artifactId>
            <version>3.0</version>
        </dependency>
        <dependency>
            <groupId>net.customware.gwt.dispatch</groupId>
            <artifactId>gwt-dispatch</artifactId>
            <version>1.2.0</version>
        </dependency>

        <!--GWT server side dependencies for logging-->
        <dependency>
            <groupId>com.allen-sauer.gwt.log</groupId>
            <artifactId>gwt-log</artifactId>
            <version>3.1.8</version>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.directory.studio</groupId>
            <artifactId>org.apache.logging.log4j</artifactId>
            <version>1.2.16</version>
        </dependency>

        <!--GWT client side dependencies using Google-Gin.
            (Also gwt-log & gwt-dispatch)-->
        <dependency>
            <groupId>com.google.gwt.inject</groupId>
            <artifactId>gin</artifactId>
            <version>1.5.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>net.customware.gwt.presenter</groupId>
            <artifactId>gwt-presenter</artifactId>
            <version>1.1.1</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <!-- Generate compiled stuff in the folder used for developing mode -->
        <outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>

        <plugins>
            <!-- Copy static web files before executing gwt:run -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <webappDirectory>${webappDirectory}</webappDirectory>
                    <webResources>
                        <resource>
                            <directory>src/main/webapp</directory>
                            <filtering>true</filtering>
                            <includes>
                                <include>*.xml</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>exploded</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Maven GWT plugin (ex. http://gwt-maven.googlecode.com/svn/docs/maven-googlewebtoolkit2-plugin/index.html)
           http://mojo.codehaus.org/gwt-maven-plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>gwt-maven-plugin</artifactId>
                <version>${gwt.version}</version>
                <!-- Plugin configuration. There are many available options, see
                gwt-maven-plugin documentation at codehaus.org -->
                <configuration>
                    <logLevel>INFO</logLevel>
                    <extraJvmArgs>-Xmx512m</extraJvmArgs>

                    <!--FIXME Remember to edit the value of <runTarget> element-->
                    <runTarget>RateChecker.html</runTarget>
                    <hostedWebapp>${webappDirectory}</hostedWebapp>
                    <style>DETAILED</style>
                    <!--FIXME Remember to edit the value of the i18n bundle class name-->
<!--                    <i18nMessagesBundle>com.cherrot.rate.client.Messages</i18nMessagesBundle>-->

                    <!--<jvm>${JAVA_HOME}/bin/java</jvm> -->
                    <appEngineHome>${gae.home}</appEngineHome>
                    <!--<noServer>false</noServer> -->
                    <server>com.google.appengine.tools.development.gwt.AppEngineLauncher</server>

                    <!-- match -Dgae.port -->
<!--                    <port>${gae.port}</port>-->

                    <!-- This is for generating Asynch interfaces -->
                    <!-- <servicePattern>**/client/*Service.java</servicePattern> -->

                    <webXml>war/WEB-INF/web.xml</webXml>
                </configuration>
                <executions>
                    <!-- <execution> <id>generateAsynch</id> <phase>generate-sources</phase> <goals>
                 <goal>generateAsync</goal> </goals> </execution> -->
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                            <goal>test</goal>
<!--                            <goal>i18n</goal>-->
<!--                            <goal>generateAsync</goal>-->
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.datanucleus</groupId>
                <artifactId>maven-datanucleus-plugin</artifactId>
                <version>1.1.4</version>
                <configuration>
                    <!--FIXME specify which class should be enhanced-->
                    <mappingIncludes>**/models/*.class</mappingIncludes>
                    <verbose>true</verbose>
                    <enhancerName>ASM</enhancerName>
                    <api>JDO</api>
                </configuration>
                <executions>
                    <execution>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>enhance</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.datanucleus</groupId>
                        <artifactId>datanucleus-core</artifactId>
                        <version>1.1.6</version>
                        <exclusions>
                            <exclusion>
                                <groupId>javax.transaction</groupId>
                                <artifactId>transaction-api</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>org.datanucleus</groupId>
                        <artifactId>datanucleus-rdbms</artifactId>
                        <version>1.1.6</version>
                    </dependency>
                    <dependency>
                        <groupId>org.datanucleus</groupId>
                        <artifactId>datanucleus-enhancer</artifactId>
                        <version>1.1.4</version>
                    </dependency>
                    <dependency>
                        <groupId>javax.jdo</groupId>
                        <artifactId>jdo2-api</artifactId>
                        <version>2.3-eb</version>
                    </dependency>
<!--                    <dependency>
                        <groupId>org.datanucleus</groupId>
                        <artifactId>datanucleus-jpa</artifactId>
                        <version>1.1.5</version>
                    </dependency>-->
                </dependencies>
            </plugin>

            <plugin>
                <groupId>net.kindleit</groupId>
                <artifactId>maven-gae-plugin</artifactId>
                <version>0.9.2</version>
                <configuration>
                    <jvmFlags>
                        <jvmFlag>-Xdebug</jvmFlag>
                        <jvmFlag>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000</jvmFlag>
                        <jvmFlag>-Dmail.log_mail_level=WARNING</jvmFlag>
                        <jvmFlag>-Dmail.log_mail_body=true</jvmFlag>
                    </jvmFlags>
                    <severity>0</severity>
                    <serverId>funny-pages</serverId>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>net.kindleit</groupId>
                        <artifactId>gae-runtime</artifactId>
                        <version>${gaePlugin.version}</version>
                        <type>pom</type>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- Upload application to the appspot automatically, during release:perform -->
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <goals>gae:deploy</goals>
                </configuration>
            </plugin>

            <!-- Java compiler version -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- We can configure our integration server to activate this profile and perform gae:deploy,
thus uploading latest snapshot to the http://1.latest.<applicationName>.appspot.com automatically -->
        <profile>
            <id>integration-build</id>
            <properties>
                <gae.application.version>stage</gae.application.version>

                <!-- Produce pretty JS during GWT compilation for test environment -->
                <gwt.style>PRETTY</gwt.style>
            </properties>
        </profile>

        <!-- This profile will activate automatically during release and upload application to
the http://2.latest.<applicationName>.appspot.com (We might want to set the 2nd version as
our applications Default version to be accessible at http://<applicationName>.appspot.com) -->
        <profile>
            <id>release-build</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>

            <properties>
                <!-- During release, set application version in appengine-web.xml to 2 -->
                <gae.application.version>release</gae.application.version>

                <!-- Produce compressed JS during GWT compilation for production environment -->
                <gwt.style>OBFUSCATED</gwt.style>
            </properties>
        </profile>
    </profiles>

</project>